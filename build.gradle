plugins {
    id 'maven-publish'
    id 'signing'
    id 'io.codearte.nexus-staging' version '0.20.0'
}

allprojects {
    apply plugin: 'java-library'

    group 'com.2train395.limelight.api'
    version '0.1.0'

    sourceCompatibility = 1.8

    repositories {
        mavenCentral()
        maven {
            url 'http://first.wpi.edu/FRC/roborio/maven/release/'
        }
    }
}

subprojects {
    dependencies {
        implementation rootProject
    }
}

dependencies {
    api 'edu.wpi.first.ntcore:ntcore-java:2019.1.1'
}

sourceSets {
    main {
        java {
            subprojects.each {
                subproject -> srcDir("$subproject.projectDir.path/src/main/java")
            }
        }
    }
}

task javadocJar(type: Jar) {
    classifier 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    classifier 'sources'
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId archivesBaseName
            from components.java
            artifact javadocJar
            artifact sourcesJar

            pom {
                name = archivesBaseName
                description = 'Unofficial API for the Limelight.'
                url = 'https://github.com/Team395/limelight-api'

                scm {
                    connection = 'scm:https://github.com/Team395/limelight-api.git'
                    developerConnection = 'scm:https://github.com/Team395/limelight-api.git'
                    url = 'https://github.com/Team395/limelight-api'
                }

                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://github.com/Team395/limelight-api/blob/master/LICENSE'
                        distribution = 'repo'
                    }
                }

                developers {
                    developer {
                        id = 'ColeFrench'
                        name = 'Cole French'
                        email = '16979554+ColeFrench@users.noreply.github.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

nexusStaging {
    packageGroup 'com.2train395'
}
